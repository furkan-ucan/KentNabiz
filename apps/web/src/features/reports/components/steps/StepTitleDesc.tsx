/**
 * Step 1: Title and Description Component
 * CreateReport formunun ilk adÄ±mÄ± (baÅŸlÄ±k ve aÃ§Ä±klama)
 */

import React from 'react';
import {
  VStack,
  Heading,
  Input,
  Textarea,
  Text,
  Box,
  Icon,
} from '@chakra-ui/react';
import {
  FormControl,
  FormLabel,
  FormErrorMessage,
} from '@chakra-ui/form-control';
import { useFormContext } from 'react-hook-form';
import { FileText, MessageSquare } from 'lucide-react';
import { CreateReportFormData } from '../../types/createReportForm.types';

export const StepTitleDesc: React.FC = () => {
  const {
    register,
    formState: { errors },
    watch,
  } = useFormContext<CreateReportFormData>();

  // Karakter sayacÄ± iÃ§in
  const titleValue = watch('title') || '';
  const descriptionValue = watch('description') || '';

  return (
    <VStack gap={8} w="100%" align="stretch">
      {/* AdÄ±m BaÅŸlÄ±ÄŸÄ± */}
      <Box textAlign="center" py={4}>
        <Icon as={FileText} w={12} h={12} color="blue.500" mb={4} />
        <Heading size="lg" color="gray.800" mb={2}>
          Sorunun Temel Bilgileri
        </Heading>
        <Text color="gray.600" fontSize="md">
          YaÅŸadÄ±ÄŸÄ±nÄ±z sorunu aÃ§Ä±k ve anlaÅŸÄ±lÄ±r bir ÅŸekilde tanÄ±mlayÄ±n
        </Text>
      </Box>

      {/* BaÅŸlÄ±k AlanÄ± */}
      <FormControl isInvalid={!!errors.title} isRequired>
        <FormLabel
          htmlFor="title"
          fontSize="md"
          fontWeight="semibold"
          color="gray.700"
          display="flex"
          alignItems="center"
          gap={2}
        >
          <Icon as={FileText} w={4} h={4} />
          BaÅŸlÄ±k
        </FormLabel>
        <Input
          id="title"
          type="text"
          placeholder="Ã–rn: Mahalledeki kaldÄ±rÄ±m Ã§atlaÄŸÄ±"
          size="lg"
          {...register('title', {
            required: 'BaÅŸlÄ±k zorunludur',
            maxLength: {
              value: 100,
              message: 'En fazla 100 karakter girebilirsiniz',
            },
          })}
          _focus={{
            borderColor: 'blue.500',
            boxShadow: '0 0 0 1px var(--chakra-colors-blue-500)',
          }}
        />
        <Box
          display="flex"
          justifyContent="space-between"
          alignItems="center"
          mt={1}
        >
          {errors.title ? (
            <FormErrorMessage>{errors.title.message}</FormErrorMessage>
          ) : (
            <Text fontSize="sm" color="gray.500">
              Sorunun kÄ±sa ve Ã¶z bir baÅŸlÄ±ÄŸÄ±nÄ± yazÄ±n
            </Text>
          )}
          <Text
            fontSize="sm"
            color={titleValue.length > 100 ? 'red.500' : 'gray.400'}
          >
            {titleValue.length}/100
          </Text>
        </Box>
      </FormControl>

      {/* AÃ§Ä±klama AlanÄ± */}
      <FormControl isInvalid={!!errors.description} isRequired>
        <FormLabel
          htmlFor="description"
          fontSize="md"
          fontWeight="semibold"
          color="gray.700"
          display="flex"
          alignItems="center"
          gap={2}
        >
          <Icon as={MessageSquare} w={4} h={4} />
          AÃ§Ä±klama
        </FormLabel>
        <Textarea
          id="description"
          placeholder={`Sorunu detaylÄ±ca anlatÄ±n...\n\nÃ–rnek:\n- Sorun ne zaman baÅŸladÄ±?\n- Hangi koÅŸullarda ortaya Ã§Ä±kÄ±yor?\n- GÃ¼nlÃ¼k yaÅŸamÄ±nÄ±zÄ± nasÄ±l etkiliyor?\n- Daha Ã¶nce bu konuda ne yapÄ±ldÄ±?`}
          rows={8}
          size="lg"
          resize="vertical"
          {...register('description', {
            required: 'AÃ§Ä±klama zorunludur',
            maxLength: {
              value: 500,
              message: 'En fazla 500 karakter girebilirsiniz',
            },
          })}
          _focus={{
            borderColor: 'blue.500',
            boxShadow: '0 0 0 1px var(--chakra-colors-blue-500)',
          }}
        />
        <Box
          display="flex"
          justifyContent="space-between"
          alignItems="center"
          mt={1}
        >
          {errors.description ? (
            <FormErrorMessage>{errors.description.message}</FormErrorMessage>
          ) : (
            <Text fontSize="sm" color="gray.500">
              Sorunu detaylÄ±ca aÃ§Ä±klayarak Ã§Ã¶zÃ¼m sÃ¼recini hÄ±zlandÄ±rÄ±n
            </Text>
          )}
          <Text
            fontSize="sm"
            color={descriptionValue.length > 500 ? 'red.500' : 'gray.400'}
          >
            {descriptionValue.length}/500
          </Text>
        </Box>
      </FormControl>

      {/* Ä°pucu Kutusu */}
      <Box
        bg="blue.50"
        p={4}
        borderRadius="lg"
        border="1px solid"
        borderColor="blue.200"
      >
        <Text fontSize="sm" color="blue.800" fontWeight="medium" mb={2}>
          ğŸ’¡ Ä°pucu: Etkili rapor yazma
        </Text>
        <VStack align="start" gap={1}>
          <Text fontSize="sm" color="blue.700">
            â€¢ Sorunu net ve anlaÅŸÄ±lÄ±r bir dille ifade edin
          </Text>
          <Text fontSize="sm" color="blue.700">
            â€¢ MÃ¼mkÃ¼nse sorunun ne zaman baÅŸladÄ±ÄŸÄ±nÄ± belirtin
          </Text>
          <Text fontSize="sm" color="blue.700">
            â€¢ Sorunu deneyimlediÄŸiniz sÄ±klÄ±ÄŸÄ± aÃ§Ä±klayÄ±n
          </Text>
          <Text fontSize="sm" color="blue.700">
            â€¢ Size ve Ã§evrenize olan etkisini anlatÄ±n
          </Text>
        </VStack>
      </Box>
    </VStack>
  );
};
